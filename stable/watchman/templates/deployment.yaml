apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "watchman.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "watchman.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "watchman.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "watchman.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "watchman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ coalesce .Values.image.tag .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - -http.addr=:{{ .Values.service.http.port }}
            - -admin.addr=:{{ .Values.service.admin.port }}
          env:
            # Misc Server
            - name: LOG_FORMAT
              value: {{ .Values.logFormat }}
            # HTTP Server
            - name: HTTPS_CERT_FILE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-tls-cert
                  key: cert
            - name: HTTPS_KEY_FILE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-tls-cert
                  key: key
            - name: BASE_PATH
              value: {{ .Values.http.basePath }}
            - name: HTTP_BIND_ADDRESS
              value: {{ .Values.http.bindAddress }}
            - name: WEB_ROOT
              value: {{ .Values.http.webRoot }}
            - name: HTTP_ADMIN_BIND_ADDRESS
              value: {{ .Values.admin.bindAddress }}
            # Downloading
            - name: DATA_REFRESH_INTERVAL
              value: {{ .Values.data.refreshInterval }}
            - name: INITIAL_DATA_DIRECTORY
              value: {{ .Values.data.directory }}
            - name: OFAC_DOWNLOAD_TEMPLATE
              value: {{ .Values.ofac.downloadTemplate }}
            - name: DPL_DOWNLOAD_TEMPLATE
              value: {{ .Values.dpl.downloadTemplate }}
            - name: CSL_DOWNLOAD_TEMPLATE
              value: {{ .Values.csl.downloadTemplate }}
            # Indexing
            - name: KEEP_STOPWORDS
              value: {{ .Values.indexing.keepStopwords | quote }}
            - name: DEBUG_NAME_PIPELINE
              value: {{ .Values.indexing.debugNamePipeline | quote }}
            # Webhooks
            - name: WEBHOOK_BATCH_SIZE
              value: {{ .Values.webhooks.batchSize | quote }}
            # Database
            - name: DATABASE_TYPE
              value: {{ .Values.database.type }}
            - name: MYSQL_ADDRESS
              value: {{ .Values.database.mysql.address }}
            - name: MYSQL_DATABASE
              value: {{ .Values.database.mysql.database }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.database.mysql.password }} # TODO(adam): read from secret?
            - name: MYSQL_USER
              value: {{ .Values.database.mysql.username }} # TODO(adam): read from secret?
            - name: MYSQL_TIMEOUT
              value: {{ .Values.database.mysql.timeout }}
            - name: SQLITE_DB_PATH
              value: {{ .Values.database.sqlite.path }}
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9090
              name: admin
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            httpGet:
              path: /ping
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
